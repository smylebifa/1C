
&НаКлиенте
Процедура ПриОткрытии(Отказ)
  ПутьФайла = "D:\выгрузка.txt";    
КонецПроцедуры


&НаКлиенте
Процедура ПросмотрФайла(Команда)  
  ЗапуститьПриложение(Объект.ПутьФайла);  
КонецПроцедуры


&НаКлиенте
Процедура Выгрузить(Команда) 
  ЗаписатьВТекстовыйФайлДокумент(Объект.Документ);    
КонецПроцедуры  


&НаСервере
Процедура ЗаписатьВТекстовыйФайлДокумент(ОбъектДокумент)
  
  ТекстФайла = Новый ТекстовыйДокумент; 
  
  Если ЗначениеЗаполнено(Объект.ПутьФайла) И ЗначениеЗаполнено(Объект.Документ) Тогда
    ПутьФайла = Объект.ПутьФайла;
    
    МетаданныеДокумента = ОбъектДокумент.Метаданные();
    
    ТекстФайла.ДобавитьСтроку("" + МетаданныеДокумента.Имя);
    
    Если ОбъектДокумент.Проведен Тогда
      ТекстФайла.ДобавитьСтроку("Проведен>>Да");          
    Иначе
      ТекстФайла.ДобавитьСтроку("Проведен>>Нет"); 
    КонецЕсли;  
    
    ТекстФайла.ДобавитьСтроку("ДатаДокумента>>" + ОбъектДокумент.Дата);           
    
    
    Для Каждого РеквизитМетаданных Из МетаданныеДокумента.Реквизиты Цикл    
      Если ЗначениеЗаполнено(ОбъектДокумент[РеквизитМетаданных.Имя]) Тогда 
        Если ЭтоДокумент(ОбъектДокумент[РеквизитМетаданных.Имя]) = Истина Тогда
          
          СтрокаТипа = ОбъектДокумент[РеквизитМетаданных.Имя].Метаданные().ПолноеИмя();
          Разделитель = СтрНайти(СтрокаТипа, ".");
          ТипДанных1 = Сред(СтрокаТипа, 1, Разделитель - 1);
          ТипДанных2 = Сред(СтрокаТипа, Разделитель + 1, СтрДлина(СтрокаТипа));
          
          ТекстФайла.ДобавитьСтроку("" + РеквизитМетаданных.Имя + ">>" + 
          ОбъектДокумент[РеквизитМетаданных.Имя] + ">>" + ТипДанных1 + ">>" + ТипДанных2 + ">>" + 
          ОбъектДокумент[РеквизитМетаданных.Имя].Номер + ">>" + ОбъектДокумент[РеквизитМетаданных.Имя].Дата);
          
        ИначеЕсли ТипЗнч(ОбъектДокумент[РеквизитМетаданных.Имя]) <> Тип("Строка") 
          И ТипЗнч(ОбъектДокумент[РеквизитМетаданных.Имя]) <> Тип("Число")
          И ТипЗнч(ОбъектДокумент[РеквизитМетаданных.Имя]) <> Тип("Дата")
          И ТипЗнч(ОбъектДокумент[РеквизитМетаданных.Имя]) <> Тип("Булево") Тогда
          
          СтрокаТипа = ОбъектДокумент[РеквизитМетаданных.Имя].Метаданные().ПолноеИмя();
          Разделитель = СтрНайти(СтрокаТипа, ".");
          ТипДанных1 = Сред(СтрокаТипа, 1, Разделитель - 1);
          ТипДанных2 = Сред(СтрокаТипа, Разделитель + 1, СтрДлина(СтрокаТипа));
          
          Данные = ОбъектДокумент[РеквизитМетаданных.Имя];
          ДанныеОбработанные = СтрЗаменить(Данные, Символы.ПС,"");
          ДанныеОбработанные = СтрЗаменить(ДанныеОбработанные, Символы.ВК,"");
          
          Если Строка(Данные) <> ДанныеОбработанные Тогда
            ТекстФайла.ДобавитьСтроку("<<>>");
            
            ТекстФайла.ДобавитьСтроку("" + РеквизитМетаданных.Имя + ">>" + Данные 
            + ">>" + ТипДанных1 + ">>" + ТипДанных2);
            
            ТекстФайла.ДобавитьСтроку("<<>>");
            
          Иначе 
            ТекстФайла.ДобавитьСтроку("" + РеквизитМетаданных.Имя + ">>" + Данные 
            + ">>" + ТипДанных1 + ">>" + ТипДанных2);
          КонецЕсли;
          
        Иначе                                                             
          Данные = ОбъектДокумент[РеквизитМетаданных.Имя];
          ДанныеОбработанные = СтрЗаменить(Данные, Символы.ПС,"");
          ДанныеОбработанные = СтрЗаменить(ДанныеОбработанные, Символы.ВК,""); 
          
          Если Строка(Данные) <> ДанныеОбработанные Тогда
            ТекстФайла.ДобавитьСтроку("<<>>");
            
            ТекстФайла.ДобавитьСтроку("" + РеквизитМетаданных.Имя + ">>" + Данные);
            
            ТекстФайла.ДобавитьСтроку("<<>>");
            
          Иначе 
            ТекстФайла.ДобавитьСтроку("" + РеквизитМетаданных.Имя + ">>" + Данные);
          КонецЕсли;
          
        КонецЕсли;
        
      КонецЕсли;      
    КонецЦикла; 
    
    Для Каждого ТабличнаяЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл   
      Если ЗначениеЗаполнено(ОбъектДокумент[ТабличнаяЧасть.Имя]) Тогда
        ТекстФайла.ДобавитьСтроку("" + ТабличнаяЧасть.Имя + ">>" + ОбъектДокумент[ТабличнаяЧасть.Имя]);       
      КонецЕсли;  
      
      НомерСтроки = 1;
      Для Каждого СтрокаТабличнойЧасти ИЗ ОбъектДокумент[ТабличнаяЧасть.Имя] Цикл
        ТекстФайла.ДобавитьСтроку("НомерСтроки>>" + Строка(НомерСтроки));
        Для Каждого РеквизитМетаданных ИЗ ТабличнаяЧасть.Реквизиты Цикл 
          Если ТипЗнч(ОбъектДокумент[ТабличнаяЧасть.Имя][0][РеквизитМетаданных.Имя]) <> Тип("Строка") 
            И ТипЗнч(ОбъектДокумент[ТабличнаяЧасть.Имя][0][РеквизитМетаданных.Имя]) <> Тип("Число")
            И ТипЗнч(ОбъектДокумент[ТабличнаяЧасть.Имя][0][РеквизитМетаданных.Имя]) <> Тип("Дата")
            И ТипЗнч(ОбъектДокумент[ТабличнаяЧасть.Имя][0][РеквизитМетаданных.Имя]) <> Тип("Булево")
            И ОбъектДокумент[ТабличнаяЧасть.Имя][0][РеквизитМетаданных.Имя] <> Неопределено Тогда  
            
            
            Если ЭтоДокумент(ОбъектДокумент[ТабличнаяЧасть.Имя][0][РеквизитМетаданных.Имя]) = Истина Тогда 
              СтрокаТипа = ОбъектДокумент[ТабличнаяЧасть.Имя][0][РеквизитМетаданных.Имя].Метаданные().ПолноеИмя();
              Разделитель = СтрНайти(СтрокаТипа, ".");
              ТипДанных1 = Сред(СтрокаТипа, 1, Разделитель - 1);
              ТипДанных2 = Сред(СтрокаТипа, Разделитель + 1, СтрДлина(СтрокаТипа));
              ТекстФайла.ДобавитьСтроку("" + РеквизитМетаданных.Имя + ">>" + 
              СтрокаТабличнойЧасти[РеквизитМетаданных.Имя] + ">>" + 
              ТипДанных1 + ">>" + ТипДанных2 + ">>" +
              СтрокаТабличнойЧасти[РеквизитМетаданных.Имя].Номер + ">>" + СтрокаТабличнойЧасти[РеквизитМетаданных.Имя].Дата );              
              
            Иначе
              СтрокаТипа = ОбъектДокумент[ТабличнаяЧасть.Имя][0][РеквизитМетаданных.Имя].Метаданные().ПолноеИмя();
              Разделитель = СтрНайти(СтрокаТипа, ".");
              ТипДанных1 = Сред(СтрокаТипа, 1, Разделитель - 1);
              ТипДанных2 = Сред(СтрокаТипа, Разделитель + 1, СтрДлина(СтрокаТипа));
              ТекстФайла.ДобавитьСтроку("" + РеквизитМетаданных.Имя + ">>" + 
              СтрокаТабличнойЧасти[РеквизитМетаданных.Имя] + ">>" + ТипДанных1 + ">>" + ТипДанных2);              
              
            КонецЕсли;
            
            
          Иначе
            ТекстФайла.ДобавитьСтроку("" + РеквизитМетаданных.Имя + ">>" + СтрокаТабличнойЧасти[РеквизитМетаданных.Имя]);               
            
          КонецЕсли;
          
        КонецЦикла;
        НомерСтроки = НомерСтроки + 1;
      КонецЦикла;
      
    КонецЦикла; 
    
    ТекстФайла.Записать(ПутьФайла); 
    
    Сообщить("Объект был выгружен");
    
  ИначеЕсли Не ЗначениеЗаполнено(Объект.Документ) И Не ЗначениеЗаполнено(Объект.ПутьФайла) Тогда
    
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Путь к файлу не выбран";
    Сообщение.Поле = "Объект.ПутьФайла";
    Сообщение.УстановитьДанные(Объект.ПутьФайла);
    Сообщение.Сообщить();
    
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Документ не выбран";
    Сообщение.Поле = "Объект.Документ";
    Сообщение.УстановитьДанные(Объект.Документ);
    Сообщение.Сообщить();     
    
  ИначеЕсли Не ЗначениеЗаполнено(Объект.Документ) Тогда
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Документ не выбран";
    Сообщение.Поле = "Объект.Документ";
    Сообщение.УстановитьДанные(Объект.Документ);
    Сообщение.Сообщить();
    
  Иначе 
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Путь к файлу не выбран";
    Сообщение.Поле = "Объект.ПутьФайла";
    Сообщение.УстановитьДанные(Объект.ПутьФайла);
    Сообщение.Сообщить();
    
  КонецЕсли;  
  
КонецПроцедуры 

&НаКлиенте
Процедура Загрузить(Команда)   
  
  СоздатьДокументИзФайла();
  
КонецПроцедуры 


&НаСервере
Процедура СоздатьДокументИзФайла()
  
  Если ЗначениеЗаполнено(Объект.ПутьФайла) Тогда
    ПутьФайла = Объект.ПутьФайла;
    ВыбранныйФайл = Новый Файл(ПутьФайла);  
    
    Если ВыбранныйФайл.Существует() Тогда
      ТекстовыйФайл = Новый ЧтениеТекста(ПутьФайла);
      
      Строка = ТекстовыйФайл.ПрочитатьСтроку();  
      
      Если Строка <> Неопределено Тогда
        
        НовыйДокумент = Документы[Строка].СоздатьДокумент();
        
        МетаданныеДокумента = НовыйДокумент.Метаданные();
        
        НазванияТабличныхЧастей = Новый Массив;       
        НазванияРеквизитовТабличныхЧастей = Новый Массив;
        
        Для каждого ТабличнаяЧастьДокумента Из МетаданныеДокумента.ТабличныеЧасти Цикл
          
          НазванияТабличныхЧастей.Добавить(ТабличнаяЧастьДокумента.Имя);  
          
          Для каждого РеквизитТабличнойЧастиДокумента Из ТабличнаяЧастьДокумента.Реквизиты Цикл
            
            Если НазванияРеквизитовТабличныхЧастей.Найти(РеквизитТабличнойЧастиДокумента) = Неопределено Тогда
              НазванияРеквизитовТабличныхЧастей.Добавить(РеквизитТабличнойЧастиДокумента.Имя);                                              
            КонецЕсли;  
            
          КонецЦикла;
          
        КонецЦикла; 
        
        Строка = ТекстовыйФайл.ПрочитатьСтроку();
        
        Пока Строка <> Неопределено Цикл      
          
          Разделитель1 = Неопределено;
          Разделитель2 = Неопределено;
          Разделитель3 = Неопределено;
          Разделитель4 = Неопределено;        
          Разделитель5 = Неопределено;  
          
          Разделитель1 = СтрНайти(Строка, ">>");
          
          Если Разделитель1 + 2 <= СтрДлина(Строка) Тогда   
            
            Разделитель2 = СтрНайти(Строка, ">>", , Разделитель1 + 2);
            
            Если Разделитель2 + 2 <= СтрДлина(Строка) Тогда   
              
              Разделитель3 = СтрНайти(Строка, ">>", , Разделитель2 + 2);
              
              Если Разделитель3 + 2 <= СтрДлина(Строка) Тогда
                Разделитель4 = СтрНайти(Строка, ">>", , Разделитель3 + 2);   
                
                Если Разделитель4 + 2 <= СтрДлина(Строка) Тогда
                  Разделитель5 = СтрНайти(Строка, ">>", , Разделитель4 + 2);
                КонецЕсли;
                
              КонецЕсли;       
              
            КонецЕсли;            
          КонецЕсли;
          
          ЗначениеИзСтроки = Неопределено;
          ЗначениеИзСтроки2 = Неопределено;
          ЗначениеИзСтроки3 = Неопределено;
          ЗначениеИзСтроки4 = Неопределено;         
          ЗначениеИзСтроки5 = Неопределено;         
          
          
          Если Разделитель2 = 0 Тогда //Работа с простым значением
            РеквизитИзСтроки = Сред(Строка, 0, Разделитель1 - 1);
            ЗначениеИзСтроки = Сред(Строка, Разделитель1 + 2, СтрДлина(Строка) - Разделитель2);
            
          ИначеЕсли Разделитель3 = 0 Тогда  //Работа со справочником
            РеквизитИзСтроки = Сред(Строка, 0, Разделитель1 - 1); 
            
            Если Разделитель1 <> Неопределено И Разделитель2 <> Неопределено Тогда
              ЗначениеИзСтроки = Сред(Строка, Разделитель1 + 2, Разделитель2 - Разделитель1 - 2);
              ЗначениеИзСтроки2 = Сред(Строка, Разделитель2 + 2, СтрДлина(Строка));
            КонецЕсли;  
            
          ИначеЕсли Разделитель4 = 0 Тогда  //Работа со справочником
            РеквизитИзСтроки = Сред(Строка, 0, Разделитель1 - 1); 
            
            Если Разделитель1 <> Неопределено И Разделитель2 <> Неопределено И Разделитель3 <> Неопределено Тогда
              ЗначениеИзСтроки = Сред(Строка, Разделитель1 + 2, Разделитель2 - Разделитель1 - 2);
              ЗначениеИзСтроки2 = Сред(Строка, Разделитель2 + 2, Разделитель3 - Разделитель2 - 2);
              ЗначениеИзСтроки3 = Сред(Строка, Разделитель3 + 2, СтрДлина(Строка));
            КонецЕсли;  
            
          Иначе //Работа с документом
            РеквизитИзСтроки = Сред(Строка, 0, Разделитель1 - 1); 
            
            Если Разделитель1 <> Неопределено И Разделитель2 <> Неопределено 
              И Разделитель3 <> Неопределено И Разделитель4 <> Неопределено Тогда
              
              ЗначениеИзСтроки = Сред(Строка, Разделитель1 + 2, Разделитель2 - Разделитель1 - 2);
              ЗначениеИзСтроки2 = Сред(Строка, Разделитель2 + 2, Разделитель3 - Разделитель2 - 2);
              ЗначениеИзСтроки3 = Сред(Строка, Разделитель3 + 2, Разделитель4 - Разделитель3 - 2);            
              ЗначениеИзСтроки4 = Сред(Строка, Разделитель4 + 2, Разделитель5 - Разделитель4 - 2);            
              ЗначениеИзСтроки5 = Сред(Строка, Разделитель5 + 2, СтрДлина(Строка));           
              
            КонецЕсли;
            
          КонецЕсли;                              
          
          
          Если НазванияТабличныхЧастей.Найти(РеквизитИзСтроки) <> Неопределено Тогда
            ТекущаяТабличнаяЧасть = РеквизитИзСтроки;
            
          ИначеЕсли РеквизитИзСтроки = "НомерСтроки" Тогда 
            НоваяСтрока = НовыйДокумент[ТекущаяТабличнаяЧасть].Добавить();
            
          ИначеЕсли РеквизитИзСтроки = "Проведен" Тогда 
            ДокументПроведен = ЗначениеИзСтроки;
            
          ИначеЕсли РеквизитИзСтроки = "ДатаДокумента" Тогда 
            НовыйДокумент.Дата = Дата(ЗначениеИзСтроки);
            
          ИначеЕсли РеквизитИзСтроки = "<<" Тогда 
            
            Строка = ТекстовыйФайл.ПрочитатьСтроку();
            
            Разделитель = СтрНайти(Строка, ">>");
            
            РеквизитИзСтроки = Сред(Строка, 0, Разделитель - 1);
            ЗначениеИзСтроки = Сред(Строка, Разделитель + 2, СтрДлина(Строка));
            
            Строка = ТекстовыйФайл.ПрочитатьСтроку();
            
            Пока Строка <> "<<>>" Цикл
              ЗначениеИзСтроки = ЗначениеИзСтроки + Символы.ПС + Строка ;
              Строка = ТекстовыйФайл.ПрочитатьСтроку();
            КонецЦикла;  
            
            Попытка
              НовыйДокумент[РеквизитИзСтроки] = ЗначениеИзСтроки
            Исключение
              НоваяСтрока[РеквизитИзСтроки] = ЗначениеИзСтроки;
            КонецПопытки;
            
            // Реквизиты табличной части  
          ИначеЕсли НазванияРеквизитовТабличныхЧастей.Найти(РеквизитИзСтроки) <> Неопределено  
            И ТекущаяТабличнаяЧасть <> Неопределено 
            И МетаданныеДокумента.Реквизиты.Найти(РеквизитИзСтроки) = Неопределено Тогда 
            
            Если ЗначениеИзСтроки2 = "Справочник" Тогда 
              Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда 
                НоваяСтрока[РеквизитИзСтроки] = Справочники[ЗначениеИзСтроки3].НайтиПоНаименованию(ЗначениеИзСтроки);   
              КонецЕсли;                                                        
              
            ИначеЕсли ЗначениеИзСтроки2 = "Документ" Тогда   
              Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда 
                НоваяСтрока[РеквизитИзСтроки] = Документы[ЗначениеИзСтроки3].НайтиПоНомеру(ЗначениеИзСтроки4, ЗначениеИзСтроки5); 
              КонецЕсли;
              
            ИначеЕсли ЗначениеИзСтроки2 = "Перечисление" Тогда
              Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда 
                НоваяСтрока[РеквизитИзСтроки] = ВернутьЗначениеПеречисленияПоСинониму(ЗначениеИзСтроки3, ЗначениеИзСтроки); 
              КонецЕсли; 
              
            ИначеЕсли ЗначениеИзСтроки2 = "ПланСчетов" Тогда
              Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда                   
                НоваяСтрока[РеквизитИзСтроки] = ПланыСчетов[ЗначениеИзСтроки3].НайтиПоКоду(ЗначениеИзСтроки);
              КонецЕсли;
              
            ИначеЕсли ЗначениеИзСтроки2 = "ПланВидовХарактеристик" Тогда
              Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда                   
                НоваяСтрока[РеквизитИзСтроки] = ПланыВидовХарактеристик[ЗначениеИзСтроки3].НайтиПоКоду(ЗначениеИзСтроки);
              КонецЕсли;
              
            ИначеЕсли ЗначениеИзСтроки2 = "ПланВидовРасчета" Тогда
              Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда                   
                НоваяСтрока[РеквизитИзСтроки] = ПланыВидовРасчета.Начисления.НайтиПоНаименованию(ЗначениеИзСтроки);
              КонецЕсли; 
              
            ИначеЕсли ЗначениеЗаполнено(ЗначениеИзСтроки) Тогда
              НоваяСтрока[РеквизитИзСтроки] = ЗначениеИзСтроки;             
            КонецЕсли;
            
            // Реквизиты документа
          Иначе
            Если НовыйДокумент[РеквизитИзСтроки] <> Неопределено Тогда 
              
              Если ЭтоСправочник(НовыйДокумент[РеквизитИзСтроки]) = Истина Тогда
                Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда          
                  НовыйДокумент[РеквизитИзСтроки] = Справочники[ЗначениеИзСтроки3].НайтиПоНаименованию(ЗначениеИзСтроки); 
                КонецЕсли;
                
              ИначеЕсли ЭтоДокумент(НовыйДокумент[РеквизитИзСтроки]) = Истина Тогда
                Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда
                  НовыйДокумент[РеквизитИзСтроки] = Документы[ЗначениеИзСтроки3].НайтиПоНомеру(ЗначениеИзСтроки4, ЗначениеИзСтроки5);
                КонецЕсли;
                
              ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(НовыйДокумент[РеквизитИзСтроки])) = Истина Тогда 
                Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда                 
                  НовыйДокумент[РеквизитИзСтроки] = ВернутьЗначениеПеречисленияПоСинониму(ЗначениеИзСтроки3, ЗначениеИзСтроки);
                КонецЕсли;  
                
              ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗнч(НовыйДокумент[РеквизитИзСтроки])) = Истина Тогда 
                Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда 
                  НовыйДокумент[РеквизитИзСтроки] = ПланыСчетов[ЗначениеИзСтроки3].НайтиПоКоду(ЗначениеИзСтроки);
                КонецЕсли;   
                
              ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипЗнч(НовыйДокумент[РеквизитИзСтроки])) = Истина Тогда 
                Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда 
                  НовыйДокумент[РеквизитИзСтроки] = ПланыВидовХарактеристик[ЗначениеИзСтроки3].НайтиПоКоду(ЗначениеИзСтроки);
                КонецЕсли;    
                
              ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(ТипЗнч(НовыйДокумент[РеквизитИзСтроки])) = Истина Тогда 
                Если ЗначениеЗаполнено(ЗначениеИзСтроки3) Тогда 
                  НовыйДокумент[РеквизитИзСтроки] = ПланыВидовРасчета[ЗначениеИзСтроки3].НайтиПоКоду(ЗначениеИзСтроки);
                КонецЕсли; 
                
                
              Иначе 
                Если ЗначениеЗаполнено(ЗначениеИзСтроки) Тогда
                  НовыйДокумент[РеквизитИзСтроки] = ЗначениеИзСтроки;
                КонецЕсли;
              КонецЕсли; 
              
            КонецЕсли;
            
          КонецЕсли;
          
          Строка = ТекстовыйФайл.ПрочитатьСтроку();
          
        КонецЦикла;
        
        НовыйДокумент.УстановитьНовыйНомер();
        НовыйДокумент.УстановитьВремя(РежимАвтоВремя.НеИспользовать);
        
        Если ДокументПроведен = "Да" ИЛИ "да" Тогда
          Попытка
            НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный); 
          Исключение
            НовыйДокумент.Записать(РежимЗаписиДокумента.Запись, РежимПроведенияДокумента.Неоперативный);  
          КонецПопытки;
          Сообщить("Объект был загружен");
        Иначе
          НовыйДокумент.Записать(РежимЗаписиДокумента.Запись, РежимПроведенияДокумента.Неоперативный);  
          Сообщить("Объект был загружен");
        КонецЕсли;
        
        ТекстовыйФайл.Закрыть();      
        
      КонецЕсли;
      
    Иначе
      Сообщить("Файла не сущесвтует");  
    КонецЕсли;
    
  Иначе
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = "Путь к файлу не выбран";
    Сообщение.Поле = "Объект.ПутьФайла";
    Сообщение.Сообщить();   
  КонецЕсли; 
  
КонецПроцедуры  


Функция ВернутьЗначениеПеречисленияПоСинониму(Перечисление, Синоним)
  ЭлементПеречисления = Неопределено;
  Для каждого ТекЭлемент Из Метаданные.Перечисления[Перечисление].ЗначенияПеречисления Цикл
    Если ТекЭлемент.Синоним = Синоним Тогда
      ЭлементПеречисления = Перечисления[Перечисление][ТекЭлемент.Имя];
      Прервать;
    КонецЕсли;
  КонецЦикла; 
  
  Возврат ЭлементПеречисления;
КонецФункции 


Функция ЭтоСсылка(Значение)
  Возврат Найти(Строка(ТипЗнч(Значение)),"ссылка");
КонецФункции

Функция ЭтоСправочник(Значение)
  Возврат Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Значение));
КонецФункции   

Функция ЭтоПеречисление(Значение)
  Возврат Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(Значение));
КонецФункции

Функция ЭтоДокумент(Значение)
  Возврат Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Значение));
КонецФункции


&НаКлиенте
Процедура ПутьФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
  СтандартнаяОбработка = Ложь; 
  
  ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
  ДиалогВыбора.ПолноеИмяФайла = "выгрузка.txt";
  ДиалогВыбора.Фильтр = "Текст, *.txt|*.txt";
  ДиалогВыбора.Заголовок = "Выберите файл";
  
  Если ДиалогВыбора.Выбрать() Тогда
    Объект.ПутьФайла = ДиалогВыбора.ПолноеИмяФайла;
  КонецЕсли;
КонецПроцедуры

